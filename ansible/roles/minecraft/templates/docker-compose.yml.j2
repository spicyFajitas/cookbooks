

services:
  mc:
    image: itzg/minecraft-server:2024.7.0
    tty: true
    stdin_open: true
    ports:
      - "8123:8123"
      - "25565:25565"
      - "19132:19132/udp"
    environment:
      EULA: "TRUE"
      EXISTING_WHITELIST_FILE: MERGE
      FORCE_REDOWNLOAD: 'true'
      MEMORY: "4G"
      MOTD: "A Paper Minecraft server hosted in Docker!"
      PLUGINS: |
        https://download.geysermc.org/v2/projects/geyser/versions/latest/builds/latest/downloads/spigot
        https://download.geysermc.org/v2/projects/floodgate/versions/latest/builds/latest/downloads/spigot
      SEED: "2510571545296918609" 
      SPIGET_RESOURCES: 39965,74429,60623,101066
      TYPE: "PAPER"
      VIEW_DISTANCE: 15
      WHITELIST: |
        spicy_Fajitas
        rajmonster10
        MatthewHasBones
        JULESVERBOOT
        Hie5
        alexprestine924
        Uberohn
        dingusTELEVISION
        JTelford64
        Quiwi567
        Cdubs907
        car0sunshine
        tangytacos38
        bvissch0902
    restart: unless-stopped
    labels:
      - homepage.group=Containers
      - homepage.name=Minecraft
      - homepage.icon=minecraft.png
      - homepage.href={{ map_domain }}/
    volumes:
      - /opt/minecraft/world_data:/data
    {# depends_on:
      - restore-backup
          condition: service_completed_successfully #}

  {# restore-backup:
    # Same image as mc, but any base image with bash and tar will work
    image: itzg/mc-backup
    restart: "no"
    entrypoint: restore-tar-backup
    volumes:
      # Must be same mount as mc service, needs to be writable
      - /opt/minecraft/restored_data:/data
      # Must be same mount as backups service, but can be read-only
      - /mnt/smbbackup/minecraft:/backups:ro #}

  backups:
    image: itzg/mc-backup
    environment:
      BACKUP_INTERVAL: "1d"
      RCON_HOST: mc
      INITIAL_DELAY: 0
      PRE_BACKUP_SCRIPT: |
        echo "Before backup!"
        echo "Also before backup from $$RCON_HOST to $$DEST_DIR"
      PRUNE_BACKUPS_DAYS: 2
    depends_on:
      mc:
        condition: service_healthy
    labels:
      - homepage.group=Containers
      - homepage.name=Backups
      - homepage.icon=minecraft.png
      - homepage.href={{ map_domain }}/
    volumes:
      # mount the same volume used by server, but read-only
      # use a host attached directory so that it in turn can be backed up
      - /opt/minecraft/world_data:/data:ro
      - /mnt/smbbackup/minecraft:/backups
  
  discord-notifier:
    container_name: minecraft-discord-webhook
    image: 'ghcr.io/spicyfajitas/minecraft-discord-webhook:main'
    volumes:
      - './world_data/logs:/app/logs:ro'
    environment:
      - 'WEBHOOK_URL={{ discord_webhook }}'
      - 'LANGUAGE=en-US'
    restart: unless-stopped

  cloudflare-ddns-root:
    image: favonia/cloudflare-ddns:latest
    network_mode: host
    restart: always
    user: "1000:1000"
    security_opt:
      - no-new-privileges:true
    environment:
      - CF_API_TOKEN={{ cloudflare_api_token_dns }}
      - DOMAINS={{ base_domain }}
      - PROXIED=true
      - UPDATE_CRON=@every 60m
      - UPDATE_ON_START=true

  cloudflare-ddns-subdomains:
    image: favonia/cloudflare-ddns:latest
    network_mode: host
    restart: always
    security_opt:
      - no-new-privileges:true
    environment:
      - PGID=1000
      - PUID=1000
      - CF_API_TOKEN={{ cloudflare_api_token_dns }}
      - DOMAINS={{ subdomains }}
      - PROXIED=false
      - UPDATE_CRON=@every 60m
      - UPDATE_ON_START=true

  cloudflare_tunnel_dynmap:
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run
    restart: unless-stopped
    environment:
      TUNNEL_TOKEN: {{ cf_tunnel_api }}
